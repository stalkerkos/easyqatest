apply plugin: 'java-library'
apply plugin: 'io.qameta.allure'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.3"
    }
}

configurations {
    agent
}


dependencies {
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'


    // https://mvnrepository.com/artifact/org.testng/testng
    testImplementation group: 'org.testng', name: 'testng', version: '7.1.0'


    // https://mvnrepository.com/artifact/com.codeborne/selenide
    implementation group: 'com.codeborne', name: 'selenide', version: '5.20.4'

    compile group: 'io.qameta.allure', name: 'allure-selenide', version: '2.0-BETA22'

    api  'io.qameta.allure:allure-selenide:2.0-BETA22'
    api  'com.beust:jcommander:1.72'
    api  'org.projectlombok:lombok:1.16.18'
    api  'org.assertj:assertj-core:3.8.0'
    api 'org.aspectj:aspectjweaver:1.8.10'
}

task testbase (type: Test){
    useTestNG{
        suites "src/test/resources/tesng.xml"
    }
    systemProperty 'allure.model.indentOutput', true
    systemProperty 'allure.results.directory', 'build/allure-results'

}

allure {
    version = '2.2.1'
    autoconfigure = true
    aspectjweaver = true
    allureJavaVersion = '2.0-BETA21'
}

testbase.doFirst {
    jvmArgs '-Dwdm.chromeDriverVersion=>90.0.4430.24'
}
